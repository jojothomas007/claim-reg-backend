openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /claims/{id}:
    get:
      tags:
      - claim-controller
      operationId: fetchClaimById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Claim'
    put:
      tags:
      - claim-controller
      operationId: submitClaim
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Claim'
    delete:
      tags:
      - claim-controller
      operationId: deleteClaimById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /claims/{id}/add-item:
    put:
      tags:
      - claim-controller
      operationId: addClaimItem
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimItem'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Claim'
  /scan-file:
    post:
      tags:
      - scanner-controller
      operationId: scanFile
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
  /claims:
    get:
      tags:
      - claim-controller
      operationId: fetchClaims
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Claim'
    post:
      tags:
      - claim-controller
      operationId: createClaim
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Claim'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Claim'
  /claim-items:
    post:
      tags:
      - claim-item-controller
      operationId: createClaimItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimItem'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClaimItem'
  /claim-items/{id}:
    get:
      tags:
      - claim-item-controller
      operationId: fetchClaimItemById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClaimItem'
    delete:
      tags:
      - claim-item-controller
      operationId: deleteClaimItemById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimItem'
        required: true
      responses:
        "200":
          description: OK
  /claim-items/findByClaim:
    get:
      tags:
      - claim-item-controller
      operationId: fetchClaimItemByClaimId
      parameters:
      - name: claimId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ClaimItem'
  /:
    get:
      tags:
      - healthcheck-controller
      operationId: isAlive
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Claim:
      type: object
      properties:
        id:
          type: integer
          format: int64
        claimant:
          $ref: '#/components/schemas/Employee'
        approver:
          $ref: '#/components/schemas/Employee'
        type:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ClaimItem'
        currency:
          type: string
        status:
          type: string
    ClaimItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        billDate:
          type: string
          format: date
        billNumber:
          type: string
        expenseCode:
          type: string
        costCenter:
          type: integer
          format: int64
        amount:
          type: number
          format: double
        subscriptionStartDate:
          type: string
          format: date
        subscriptionEndDate:
          type: string
          format: date
    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        department:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        team:
          type: string
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
